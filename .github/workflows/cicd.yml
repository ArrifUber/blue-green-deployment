name: Blue Green Deployment

on:
  push:
    tags:
      - "v*"

env:
  SSH_HOST: ${{  secrets.SSH_SERVER_IP  }}
  SSH_USERNAME: ${{secrets.SSH_USERNAME}}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_USERNAME}}
          password: ${{env.DOCKER_PASSWORD}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./deploy
          file: ./deploy/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blue_green:${{github.ref_name}}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Executing remote command using ssh
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{env.SSH_PRIVATE_KEY}}
          script: |
            cd blue_green/
            export IMAGE=${{ secrets.DOCKER_USERNAME }}/blue_green:${{github.ref_name}}

            sudo sed -i "s|image: arifbudianto/.*|image: ${IMAGE}|" docker-compose.yml

            color=$(grep -o 'proxy_pass http://app_[a-z]*;' nginx/nginx.conf | head -1)

            if [ "$color" =  "proxy_pass http://app_blue;" ]; then
              sudo docker compose pull green
              sudo docker compose up -d --pull always green

              sudo sed 's|proxy_pass http://app_blue;|proxy_pass http://app_green;|' -i nginx/nginx.conf
              sudo docker exec nginx sh -c "sed 's|proxy_pass http://app_blue;|proxy_pass http://app_green;|' /etc/nginx/nginx.conf > /tmp/nginx.conf && cat /tmp/nginx.conf > /etc/nginx/nginx.conf && nginx -s reload"

              for i in {1..10}; do
                if curl -f http://127.0.0.1:5002/health; then
                  echo "Container is healthy!"
                  break
                else
                  echo "Waiting for container to be ready..."
                  sleep 5
                fi
              done
              
              echo green
            else
              sudo docker compose pull blue
              sudo docker compose up -d --pull always blue

              sudo sed 's|proxy_pass http://app_green;|proxy_pass http://app_blue;|' -i nginx/nginx.conf
              sudo docker exec nginx sh -c "sed 's|proxy_pass http://app_green;|proxy_pass http://app_blue;|' /etc/nginx/nginx.conf > /tmp/nginx.conf && cat /tmp/nginx.conf > /etc/nginx/nginx.conf && nginx -s reload"

              for i in {1..10}; do
                if curl -f http://127.0.0.1:5001/health; then
                  echo "Container is healthy!"
                  break
                else
                  echo "Waiting for container to be ready..."
                  sleep 5
                fi
              done

              echo blue
            fi

            sudo docker exec nginx nginx -s reload


    